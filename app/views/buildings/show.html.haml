%p#notice
  = notice
  
.row
  .roof-set-hed
    %p
      %b Roof set:
      = link_to @building.roof_set.name, @building.roof_set
    %h1{{style: "padding-bottom: 0;"}}
      = @building.name

.roof-set        
  .building-list
  
    %p
      = @building.address
      %br
      #{@building.city}, #{@building.state} #{@building.zipcode}
      %br
      #{@building.latitude}° / #{@building.longitude}°
  
    %p
      = link_to 'View on Sunroof', @building.sunroof_url, target: "_blank"

    %b Roof sq feet:
    = number_with_delimiter( @building.roof_sq_feet )
    
    %br
    %b Potential kW:
    = number_with_delimiter( @building.kW )
    
    %br
    %b Installed kW:
    = number_with_delimiter( @building.installed_kw)
    
    %br
    %b Sunlight hours:
    = number_with_delimiter( @building.sunlight_hours )
    
    %br
    %b kWh/yr:
    = number_with_delimiter( @building.kWh_yr)
    
    %br
    %b Annual potential savings
    = number_to_currency( @building.savings, precision: 0 )
    
    %hr
    %b Tags:
    - if @tags
      - @tags.each_with_index do |t, i|
        %div{onmouseover: "$('#trash_#{i}').show()", onmouseout: "$('#trash_#{i}').hide()"}
          #{t}
          = link_to "<i class='fa fa-trash-o' aria-hidden='true' style='display:none;' id='trash_#{i}'></i>".html_safe, "/buildings/#{@building.to_param}/tag/#{t}",
              data: {:confirm => 'Estas seguro?'}, method: :delete, id: 'foo3'
    %div{style: "margin-top: 20px;"}
      - if user_signed_in? && current_user == @building.user
        = form_for @building, url: tag_building_path, method: :post do |f|
          - options = [['School', 'school'], ['Office Building', 'office building'], ['Fulfillment Center', 'fulfillment center'], ['Sort Center', 'sort center'], ['Warehouse', 'warehouse'], ['Data Center', 'data center']]
        
          = f.select :tag_list, options, {include_blank: true}, {class: 'form-control', style: 'display: inline; width: 300px;'}
        
          -# = options_for_select(options)
          = f.submit 'Tag', class: 'btn'
      
  .map
    #map

  :javascript
    handler = Gmaps.build('Google');
    handler.buildMap({ provider: { zoom: 17 }, internal: {id: 'map'}}, function(){
      markers = handler.addMarkers([
        {
          "lat": #{@building.latitude},
          "lng": #{@building.longitude},
          "infowindow": "#{@building.name}"
        }
      ]);
      // handler.bounds.extendWith(markers);
      handler.map.centerOn({lat: #{@building.latitude}, lng: #{@building.longitude}})
      handler.fitMapToBounds();
    });